<div class="ClassDoc YAMLDoc" id="button" markdown="1">

# class __button__

The button widget is a clickable text string, by default surrounded by a
button-like frame.

__Example (OpenSesame script):__

~~~
widget 0 0 1 1 button text='Click me!' center='yes' frame='yes' var='response'
~~~

Defining a button widget with Python inline code:

__Example (Python):__

~~~ .python
from libopensesame import widgets
form = widgets.form(self.experiment)
button = widgets.button(form, text='Click me!', frame=True, center=True,
        var='response')
form.set_widget(button, (0,0))
form._exec()
~~~

__Function list:__


- [function __button\.\_\_init\_\___\(form, var=None, text=u'button', frame=True, center=True\)](#function-__button__init____form-varnone-textubutton-frametrue-centertrue)
- [function __button\.draw\_frame__\(style=u'normal', rect=None\)](#function-__buttondraw_frame__styleunormal-rectnone)
- [function __button\.draw\_text__\(text, html=True\)](#function-__buttondraw_text__text-htmltrue)
- [function __button\.on\_mouse\_click__\(pos\)](#function-__buttonon_mouse_click__pos)
- [function __button\.render__\(\)](#function-__buttonrender__)
- [function __button\.set\_rect__\(rect\)](#function-__buttonset_rect__rect)
- [function __button\.set\_var__\(val, var=None\)](#function-__buttonset_var__val-varnone)



<div class="FunctionDoc YAMLDoc" id="button-__init__" markdown="1">

## [function __button\.\_\_init\_\___\(form, var=None, text=u'button', frame=True, center=True\)](#function-__button__init____form-varnone-textubutton-frametrue-centertrue) {#function-__button__init____form-varnone-textubutton-frametrue-centertrue}

Constructor.

__Arguments:__

- `form` -- The parent form.
	- Type: form

__Keywords:__

- `text` -- Button text.
	- Type: str, unicode
	- Default: u'button'
- `frame` -- Indicates whether a frame should be drawn around the widget.
	- Type: bool
	- Default: True
- `center` -- Indicates whether the text should be centered.
	- Type: bool
	- Default: True
- `var` -- The name of the experimental variable that should be used to log the widget status.
	- Type: str, unicode, NoneType
	- Default: None

</div>

[button.__init__]: #button-__init__
[__init__]: #button-__init__

<div class="FunctionDoc YAMLDoc" id="button-draw_frame" markdown="1">

## [function __button\.draw\_frame__\(style=u'normal', rect=None\)](#function-__buttondraw_frame__styleunormal-rectnone) {#function-__buttondraw_frame__styleunormal-rectnone}

Draws a simple frame around the widget.

__Keywords:__

- `rect` -- A (left, top, width, height) tuple for the frame geometry or `None` to use the widget geometry.
	- Type: tuple, NoneType
	- Default: None
- `style` -- A visual style. Should be 'normal', 'active', or 'light'.
	- Type: str, unicode
	- Default: u'normal'

</div>

[button.draw_frame]: #button-draw_frame
[draw_frame]: #button-draw_frame

<div class="FunctionDoc YAMLDoc" id="button-draw_text" markdown="1">

## [function __button\.draw\_text__\(text, html=True\)](#function-__buttondraw_text__text-htmltrue) {#function-__buttondraw_text__text-htmltrue}

Draws text inside the widget.

__Arguments:__

- `text` -- The text to draw.
	- Type: str, unicode

__Keywords:__

- `html` -- Indicates whether HTML should be parsed.
	- Type: bool
	- Default: True

</div>

[button.draw_text]: #button-draw_text
[draw_text]: #button-draw_text

<div class="FunctionDoc YAMLDoc" id="button-on_mouse_click" markdown="1">

## [function __button\.on\_mouse\_click__\(pos\)](#function-__buttonon_mouse_click__pos) {#function-__buttonon_mouse_click__pos}

Is called when the user clicks on the button. Returns the button text.

__Arguments:__

- `pos` -- An (x, y) coordinates tuple.
	- Type: tuple

__Returns:__

The button text.

- Type: unicode

</div>

[button.on_mouse_click]: #button-on_mouse_click
[on_mouse_click]: #button-on_mouse_click

<div class="FunctionDoc YAMLDoc" id="button-render" markdown="1">

## [function __button\.render__\(\)](#function-__buttonrender__) {#function-__buttonrender__}

Draws the widget.

</div>

[button.render]: #button-render
[render]: #button-render

<div class="FunctionDoc YAMLDoc" id="button-set_rect" markdown="1">

## [function __button\.set\_rect__\(rect\)](#function-__buttonset_rect__rect) {#function-__buttonset_rect__rect}

Sets the widget geometry.

__Arguments:__

- `rect` -- A (left, top, width, height) tuple.
	- Type: tuple

</div>

[button.set_rect]: #button-set_rect
[set_rect]: #button-set_rect

<div class="FunctionDoc YAMLDoc" id="button-set_var" markdown="1">

## [function __button\.set\_var__\(val, var=None\)](#function-__buttonset_var__val-varnone) {#function-__buttonset_var__val-varnone}

Sets an experimental variable.

__Arguments:__

- `val` -- A value.

__Keywords:__

- `var` -- A variable name, or None to use widget default.
	- Type: str, unicode, NoneType
	- Default: None

</div>

[button.set_var]: #button-set_var
[set_var]: #button-set_var

</div>

[button]: #button


[function __button\.\_\_init\_\___\(form, var=None, text=u'button', frame=True, center=True\)]: #function-__button__init____form-varnone-textubutton-frametrue-centertrue
[function __button\.draw\_frame__\(style=u'normal', rect=None\)]: #function-__buttondraw_frame__styleunormal-rectnone
[function __button\.draw\_text__\(text, html=True\)]: #function-__buttondraw_text__text-htmltrue
[function __button\.on\_mouse\_click__\(pos\)]: #function-__buttonon_mouse_click__pos
[function __button\.render__\(\)]: #function-__buttonrender__
[function __button\.set\_rect__\(rect\)]: #function-__buttonset_rect__rect
[function __button\.set\_var__\(val, var=None\)]: #function-__buttonset_var__val-varnone