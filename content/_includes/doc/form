<div class="ClassDoc YAMLDoc" id="form" markdown="1">

# class __form__

The form is a container for widgets, such as labels, etc. If you use the
form_base plug-in in combination with OpenSesame script, you do not need
to explicitly create a form. However, if you use Python inline code, you
do.

__Example__:

~~~ .python
from libopensesame import widgets
form = widgets.form(self.experiment)
label = widgets.label(form, text='label)
form.set_widget(label, (0,0))
form._exec()
~~~

__Function list:__


- [function __form\.\_\_init\_\___\(experiment, rows=2, spacing=10, cols=2, item=None, theme=u'gray', margins=\(100, 100, 100, 100\)\)](#function-__form__init____experiment-rows2-spacing10-cols2-itemnone-themeugray-margins100-100-100-100)
- [function __form\.\_exec__\(focus\_widget=None\)](#function-__form_exec__focus_widgetnone)
- [function __form\.cell\_index__\(pos\)](#function-__formcell_index__pos)
- [function __form\.render__\(\)](#function-__formrender__)
- [function __form\.set\_widget__\(widget, pos, colspan=1, rowspan=1\)](#function-__formset_widget__widget-pos-colspan1-rowspan1)
- [function __form\.xy\_to\_index__\(xy\)](#function-__formxy_to_index__xy)



<div class="FunctionDoc YAMLDoc" id="form-__init__" markdown="1">

## [function __form\.\_\_init\_\___\(experiment, rows=2, spacing=10, cols=2, item=None, theme=u'gray', margins=\(100, 100, 100, 100\)\)](#function-__form__init____experiment-rows2-spacing10-cols2-itemnone-themeugray-margins100-100-100-100) {#function-__form__init____experiment-rows2-spacing10-cols2-itemnone-themeugray-margins100-100-100-100}

Constructor.

__Arguments:__

- `experiment` -- An OpenSesame experiment.
	- Type: experiment

__Keywords:__

- `item` -- The item of which the form is part.
	- Default: None
	- Type: item, NoneType
- `theme` -- The theme for the widgets.
	- Default: u'gray'
	- Type: str, unicode
- `rows` -- Analogous to `cols`, but for the rows.
	- Default: 2
	- Type: int, list
- `margins` -- The amount of empty space around the form. This is specified as a list, like so [top-margin, right-margin, bottom-margin, left-margin].
	- Default: (100, 100, 100, 100)
	- Type: list
- `spacing` -- The amount of empty space between widgets (in pixels).
	- Default: 10
	- Type: int
- `cols` -- The number of columns (as int) or a list that specifies the number and relative size of the columns. For example, `[1,2,1]` will create 3 columns where the middle one is twice as large as the outer ones.
	- Default: 2
	- Type: int, list

</div>

[form.__init__]: #form-__init__
[__init__]: #form-__init__

<div class="FunctionDoc YAMLDoc" id="form-_exec" markdown="1">

## [function __form\.\_exec__\(focus\_widget=None\)](#function-__form_exec__focus_widgetnone) {#function-__form_exec__focus_widgetnone}

Executes the form.

__Keywords:__

- `focus_widget` -- A widget that is in the form and should receive a virtual mouse click when the form is opened. This allows you to activate a text_input right away, for example, so that the user doesn't have to click on it anymore.
	- Default: None
	- Type: widget, NoneType

__Returns:__

Gives the return value of the form, which depends on how the user interacted with the widgets. For example, if the user pressed a button, the button text will be returned.

</div>

[form._exec]: #form-_exec
[_exec]: #form-_exec

<div class="FunctionDoc YAMLDoc" id="form-cell_index" markdown="1">

## [function __form\.cell\_index__\(pos\)](#function-__formcell_index__pos) {#function-__formcell_index__pos}

Converts a position to a cell index. A cell index corresponds to the number of the cell in the form, from left-to-right, top-to-bottom.

__Arguments:__

- `pos` -- A position in the form, which can be an index (int) or a (column, row) tuple.
	- Type: int, tuple

__Returns:__

A cell index.

- Type: int

</div>

[form.cell_index]: #form-cell_index
[cell_index]: #form-cell_index

<div class="FunctionDoc YAMLDoc" id="form-render" markdown="1">

## [function __form\.render__\(\)](#function-__formrender__) {#function-__formrender__}

Draws the form and all the widgets in it.

</div>

[form.render]: #form-render
[render]: #form-render

<div class="FunctionDoc YAMLDoc" id="form-set_widget" markdown="1">

## [function __form\.set\_widget__\(widget, pos, colspan=1, rowspan=1\)](#function-__formset_widget__widget-pos-colspan1-rowspan1) {#function-__formset_widget__widget-pos-colspan1-rowspan1}

Adds a widget to the form.

__Arguments:__

- `widget` -- The widget to add.
	- Type: widget
- `pos` -- The position to add the widget, which can be an index or a (column, row) tuple.
	- Type: int, tuple

__Keywords:__

- `colspan` -- The number of columns that the widget should span.
	- Default: 1
	- Type: int
- `rowspan` -- The number of rows that the widget should span.
	- Default: 1
	- Type: int

</div>

[form.set_widget]: #form-set_widget
[set_widget]: #form-set_widget

<div class="FunctionDoc YAMLDoc" id="form-xy_to_index" markdown="1">

## [function __form\.xy\_to\_index__\(xy\)](#function-__formxy_to_index__xy) {#function-__formxy_to_index__xy}

Converts a coordinate in pixels to a cell index. This allows you to determine on which widget a user has clicked.

__Arguments:__

- `xy` -- An (x,y) coordinates tuple.
	- Type: tuple

__Returns:__

A cell index.

- Type: int

</div>

[form.xy_to_index]: #form-xy_to_index
[xy_to_index]: #form-xy_to_index

</div>

[form]: #form


[function __form\.\_\_init\_\___\(experiment, rows=2, spacing=10, cols=2, item=None, theme=u'gray', margins=\(100, 100, 100, 100\)\)]: #function-__form__init____experiment-rows2-spacing10-cols2-itemnone-themeugray-margins100-100-100-100
[function __form\.\_exec__\(focus\_widget=None\)]: #function-__form_exec__focus_widgetnone
[function __form\.cell\_index__\(pos\)]: #function-__formcell_index__pos
[function __form\.render__\(\)]: #function-__formrender__
[function __form\.set\_widget__\(widget, pos, colspan=1, rowspan=1\)]: #function-__formset_widget__widget-pos-colspan1-rowspan1
[function __form\.xy\_to\_index__\(xy\)]: #function-__formxy_to_index__xy