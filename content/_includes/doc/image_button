<div class="ClassDoc YAMLDoc" id="image_button" markdown="1">

# class __image_button__

The image_button widget is a clickable image.

__Example (OpenSesame script):__

~~~
widget 0 0 1 1 image_button path='5.png' var='response'
~~~

__Example (Python):__

{% highlight python %}
from libopensesame import widgets
form = widgets.form(self.experiment)
# The full path to the image needs to be provided.
# self.experiment.get_file() can be used to retrieve the full path
# to an image in the file pool.
image_button = widgets.image_button(form,
        path=self.experiment.get_file('5.png'), var='response')
form.set_widget(image_button, (0,0))
form._exec()
{% endhighlight %}

__Function list:__


- [function __image_button.\_\_init\_\___(form, var=None, path=None, frame=False, adjust=True, image_id=None)](#function-__image_button__init____form-varnone-pathnone-framefalse-adjusttrue-image_idnone)
- [function __image_button.draw_frame__(style=u'normal', rect=None)](#function-__image_buttondraw_frame__styleunormal-rectnone)
- [function __image_button.on_mouse_click__(pos)](#function-__image_buttonon_mouse_click__pos)
- [function __image_button.render__()](#function-__image_buttonrender__)
- [function __image_button.set_rect__(rect)](#function-__image_buttonset_rect__rect)
- [function __image_button.set_var__(val, var=None)](#function-__image_buttonset_var__val-varnone)



<div class="FunctionDoc YAMLDoc" id="image_button-__init__" markdown="1">

## [function __image_button.\_\_init\_\___(form, var=None, path=None, frame=False, adjust=True, image_id=None)](#function-__image_button__init____form-varnone-pathnone-framefalse-adjusttrue-image_idnone) {#function-__image_button__init____form-varnone-pathnone-framefalse-adjusttrue-image_idnone}

Constructor.

__Arguments:__

- `form` -- The parent form.
	- Type: form

__Keywords:__

- `var` -- The name of the experimental variable that should be used to log the widget status.
	- Default: None
	- Type: str, unicode, NoneType
- `path` -- The full path to the image. To show an image from the file pool, you need to first use `experiment.get_file` to determine the full path to the image.
	- Default: None
	- Type: str, unicode, NoneType
- `frame` -- Indicates whether a frame should be drawn around the widget.
	- Default: False
	- Type: bool
- `adjust` -- Indicates whether the image should be scaled according to the size of the widget.
	- Default: True
	- Type: bool
- `image_id` -- An id to identify the image when it is clicked. If `None`, the path to the image is used as id.
	- Default: None
	- Type: str, unicode, NoneType

</div>

[image_button.__init__]: #image_button-__init__
[__init__]: #image_button-__init__

<div class="FunctionDoc YAMLDoc" id="image_button-draw_frame" markdown="1">

## [function __image_button.draw_frame__(style=u'normal', rect=None)](#function-__image_buttondraw_frame__styleunormal-rectnone) {#function-__image_buttondraw_frame__styleunormal-rectnone}

Draws a simple frame around the widget.

__Keywords:__

- `style` -- A visual style. Should be 'normal', 'active', or 'light'.
	- Default: u'normal'
	- Type: str, unicode
- `rect` -- A (left, top, width, height) tuple for the frame geometry or `None` to use the widget geometry.
	- Default: None
	- Type: tuple, NoneType

</div>

[image_button.draw_frame]: #image_button-draw_frame
[draw_frame]: #image_button-draw_frame

<div class="FunctionDoc YAMLDoc" id="image_button-on_mouse_click" markdown="1">

## [function __image_button.on_mouse_click__(pos)](#function-__image_buttonon_mouse_click__pos) {#function-__image_buttonon_mouse_click__pos}

Is called whenever the user clicks on the widget. Returns the image_id or the path to the image if no image_id has been specified.

__Arguments:__

- `pos` -- An (x, y) coordinate tuple.
	- Type: tuple

</div>

[image_button.on_mouse_click]: #image_button-on_mouse_click
[on_mouse_click]: #image_button-on_mouse_click

<div class="FunctionDoc YAMLDoc" id="image_button-render" markdown="1">

## [function __image_button.render__()](#function-__image_buttonrender__) {#function-__image_buttonrender__}

Draws the widget.

</div>

[image_button.render]: #image_button-render
[render]: #image_button-render

<div class="FunctionDoc YAMLDoc" id="image_button-set_rect" markdown="1">

## [function __image_button.set_rect__(rect)](#function-__image_buttonset_rect__rect) {#function-__image_buttonset_rect__rect}

Sets the widget geometry.

__Arguments:__

- `rect` -- A (left, top, width, height) tuple.
	- Type: tuple

</div>

[image_button.set_rect]: #image_button-set_rect
[set_rect]: #image_button-set_rect

<div class="FunctionDoc YAMLDoc" id="image_button-set_var" markdown="1">

## [function __image_button.set_var__(val, var=None)](#function-__image_buttonset_var__val-varnone) {#function-__image_buttonset_var__val-varnone}

Sets an experimental variable.

__Arguments:__

- `val` -- A value.

__Keywords:__

- `var` -- A variable name, or None to use widget default.
	- Default: None
	- Type: str, unicode, NoneType

</div>

[image_button.set_var]: #image_button-set_var
[set_var]: #image_button-set_var

</div>

[image_button]: #image_button


[function __image_button.\_\_init\_\___(form, var=None, path=None, frame=False, adjust=True, image_id=None)]: #function-__image_button__init____form-varnone-pathnone-framefalse-adjusttrue-image_idnone
[function __image_button.draw_frame__(style=u'normal', rect=None)]: #function-__image_buttondraw_frame__styleunormal-rectnone
[function __image_button.on_mouse_click__(pos)]: #function-__image_buttonon_mouse_click__pos
[function __image_button.render__()]: #function-__image_buttonrender__
[function __image_button.set_rect__(rect)]: #function-__image_buttonset_rect__rect
[function __image_button.set_var__(val, var=None)]: #function-__image_buttonset_var__val-varnone