<div class="ClassDoc YAMLDoc" id="sampler" markdown="1">

# class __sampler__

The `sampler` module provides functionality to play sound samples in
`.ogg` and `.wav` format (Audacity is an excellent free tool to convert
samples from other formats).

__Important note:__

If you find that your sample plays to slowly (low pitch) or too quickly
(high pitch), make sure that the sampling rate of your sample matches
the sampling rate of the sampler back-end as specified under back-end
settings.

__Example:__

{% highlight python %}
from openexp.sampler import sampler
my_sampler = sampler(exp, exp.get_file('bark.ogg'))
my_sampler.play()
{% endhighlight %}

__Function list:__


- [function __sampler\.\_\_init\_\___\(experiment, src\)](#function-__sampler__init____experiment-src)
- [function __sampler\.fade\_in__\(ms\)](#function-__samplerfade_in__ms)
- [function __sampler\.is\_playing__\(\)](#function-__sampleris_playing__)
- [function __sampler\.pan__\(p\)](#function-__samplerpan__p)
- [function __sampler\.pause__\(\)](#function-__samplerpause__)
- [function __sampler\.pitch__\(p\)](#function-__samplerpitch__p)
- [function __sampler\.play__\(block=False\)](#function-__samplerplay__blockfalse)
- [function __sampler\.resume__\(\)](#function-__samplerresume__)
- [function __sampler\.stop__\(\)](#function-__samplerstop__)
- [function __sampler\.stop\_after__\(ms\)](#function-__samplerstop_after__ms)
- [function __sampler\.volume__\(vol\)](#function-__samplervolume__vol)
- [function __sampler\.wait__\(\)](#function-__samplerwait__)



<div class="FunctionDoc YAMLDoc" id="sampler-__init__" markdown="1">

## [function __sampler\.\_\_init\_\___\(experiment, src\)](#function-__sampler__init____experiment-src) {#function-__sampler__init____experiment-src}

Initializes the sampler with a specified file.

__Example:__

{% highlight python %}
from openexp.sampler import sampler
src = exp.get_file('my_sound.ogg')
my_sampler = sampler(exp, src)
{% endhighlight %}

__Arguments:__

- `experiment` -- The experiment object.
	- Type: experiment
- `src` -- The full path to a `.wav` or `.ogg` file.
	- Type: unicode, str

</div>

[sampler.__init__]: #sampler-__init__
[__init__]: #sampler-__init__

<div class="FunctionDoc YAMLDoc" id="sampler-fade_in" markdown="1">

## [function __sampler\.fade\_in__\(ms\)](#function-__samplerfade_in__ms) {#function-__samplerfade_in__ms}

Sets a fade-in time in milliseconds.

__Example:__

{% highlight python %}
from openexp.sampler import sampler
src = exp.get_file('my_sound.ogg')
my_sampler = sampler(exp, src)
my_sampler.fade_in(100)
{% endhighlight %}

__Arguments:__

- `ms` -- An integer value specifying the duration in milliseconds.
	- Type: int

</div>

[sampler.fade_in]: #sampler-fade_in
[fade_in]: #sampler-fade_in

<div class="FunctionDoc YAMLDoc" id="sampler-is_playing" markdown="1">

## [function __sampler\.is\_playing__\(\)](#function-__sampleris_playing__) {#function-__sampleris_playing__}

Checks if a sound is currently playing.

__Returns:__

True if a sound is playing, False if not.

- Type: bool

</div>

[sampler.is_playing]: #sampler-is_playing
[is_playing]: #sampler-is_playing

<div class="FunctionDoc YAMLDoc" id="sampler-pan" markdown="1">

## [function __sampler\.pan__\(p\)](#function-__samplerpan__p) {#function-__samplerpan__p}

Sets the panning of the sample. The volume of the "unpanned" channel decreases, the volume of the other channel remains the same. To fully mute one channel specify "left" (mutes right, pans to left) or "right" (mutes left, pans to right").

__Example:__

{% highlight python %}
from openexp.sampler import sampler
src = exp.get_file('my_sound.ogg')
my_sampler = sampler(exp, src)
my_sampler.pan('left')
{% endhighlight %}

__Arguments:__

- `p` -- Panning. A float (p < 0 = to left, p > 0 = to right) or string ("left" or "right").
	- Type: int, float, str, unicode

</div>

[sampler.pan]: #sampler-pan
[pan]: #sampler-pan

<div class="FunctionDoc YAMLDoc" id="sampler-pause" markdown="1">

## [function __sampler\.pause__\(\)](#function-__samplerpause__) {#function-__samplerpause__}

Pauses playback (if any).

__Example:__

{% highlight python %}
from openexp.sampler import sampler
src = exp.get_file('my_sound.ogg')
my_sampler = sampler(exp, src)
my_sampler.play()
self.sleep(100)
my_sampler.pause()
self.sleep(100)
my_sampler.resume()
{% endhighlight %}

</div>

[sampler.pause]: #sampler-pause
[pause]: #sampler-pause

<div class="FunctionDoc YAMLDoc" id="sampler-pitch" markdown="1">

## [function __sampler\.pitch__\(p\)](#function-__samplerpitch__p) {#function-__samplerpitch__p}

Sets the relative pitch of the sample.

__Example:__

{% highlight python %}
from openexp.sampler import sampler
src = exp.get_file('my_sound.ogg')
my_sampler = sampler(exp, src)
my_sampler.pitch(2.0)
{% endhighlight %}

__Arguments:__

- `p` -- The pitch. p > 1.0 slows the sample down, p < 1.0 speeds the sample up.
	- Type: int, float

</div>

[sampler.pitch]: #sampler-pitch
[pitch]: #sampler-pitch

<div class="FunctionDoc YAMLDoc" id="sampler-play" markdown="1">

## [function __sampler\.play__\(block=False\)](#function-__samplerplay__blockfalse) {#function-__samplerplay__blockfalse}

Plays the sound.

__Example:__

{% highlight python %}
from openexp.sampler import sampler
src = exp.get_file('my_sound.ogg')
my_sampler = sampler(exp, src)
my_sampler.play()
{% endhighlight %}

__Keywords:__

- `block` -- If True, the function blocks until the sound is finished. If False, the function returns right away and the sound is played in the background.
	- Type: bool
	- Default: False

</div>

[sampler.play]: #sampler-play
[play]: #sampler-play

<div class="FunctionDoc YAMLDoc" id="sampler-resume" markdown="1">

## [function __sampler\.resume__\(\)](#function-__samplerresume__) {#function-__samplerresume__}

Resumes playback (if any).

__Example:__

{% highlight python %}
from openexp.sampler import sampler
src = exp.get_file('my_sound.ogg')
my_sampler = sampler(exp, src)
my_sampler.play()
self.sleep(100)
my_sampler.pause()
self.sleep(100)
my_sampler.resume()
{% endhighlight %}

</div>

[sampler.resume]: #sampler-resume
[resume]: #sampler-resume

<div class="FunctionDoc YAMLDoc" id="sampler-stop" markdown="1">

## [function __sampler\.stop__\(\)](#function-__samplerstop__) {#function-__samplerstop__}

Stops the currently playing sound (if any).

__Example:__

{% highlight python %}
from openexp.sampler import sampler
src = exp.get_file('my_sound.ogg')
my_sampler = sampler(exp, src)
my_sampler.play()
self.sleep(100)
my_sampler.stop()
{% endhighlight %}

</div>

[sampler.stop]: #sampler-stop
[stop]: #sampler-stop

<div class="FunctionDoc YAMLDoc" id="sampler-stop_after" markdown="1">

## [function __sampler\.stop\_after__\(ms\)](#function-__samplerstop_after__ms) {#function-__samplerstop_after__ms}

Specifies a duration after which the sampler stops playing.

__Example:__

{% highlight python %}
from openexp.sampler import sampler
src = exp.get_file('my_sound.ogg')
my_sampler = sampler(exp, src)
my_sampler.stop_after(100)
{% endhighlight %}

__Arguments:__

- `ms` -- An integer value specifying the duration in milliseconds.
	- Type: int

</div>

[sampler.stop_after]: #sampler-stop_after
[stop_after]: #sampler-stop_after

<div class="FunctionDoc YAMLDoc" id="sampler-volume" markdown="1">

## [function __sampler\.volume__\(vol\)](#function-__samplervolume__vol) {#function-__samplervolume__vol}

Sets the volume.

__Example:__

{% highlight python %}
from openexp.sampler import sampler
src = exp.get_file('my_sound.ogg')
my_sampler = sampler(exp, src)
my_sampler.volume(0.5)
{% endhighlight %}

__Arguments:__

- `vol` -- A volume level between 0.0 (silent) and 1.0 (full).
	- Type: int, float

</div>

[sampler.volume]: #sampler-volume
[volume]: #sampler-volume

<div class="FunctionDoc YAMLDoc" id="sampler-wait" markdown="1">

## [function __sampler\.wait__\(\)](#function-__samplerwait__) {#function-__samplerwait__}

Blocks until the sound has finished playing or returns right away if no sound is playing.

__Example:__

{% highlight python %}
from openexp.sampler import sampler
src = exp.get_file('my_sound.ogg')
my_sampler = sampler(exp, src)
my_sampler.play()
my_sampler.wait()
print('The sampler is finished!')
{% endhighlight %}

</div>

[sampler.wait]: #sampler-wait
[wait]: #sampler-wait

</div>

[sampler]: #sampler


[function __sampler\.\_\_init\_\___\(experiment, src\)]: #function-__sampler__init____experiment-src
[function __sampler\.fade\_in__\(ms\)]: #function-__samplerfade_in__ms
[function __sampler\.is\_playing__\(\)]: #function-__sampleris_playing__
[function __sampler\.pan__\(p\)]: #function-__samplerpan__p
[function __sampler\.pause__\(\)]: #function-__samplerpause__
[function __sampler\.pitch__\(p\)]: #function-__samplerpitch__p
[function __sampler\.play__\(block=False\)]: #function-__samplerplay__blockfalse
[function __sampler\.resume__\(\)]: #function-__samplerresume__
[function __sampler\.stop__\(\)]: #function-__samplerstop__
[function __sampler\.stop\_after__\(ms\)]: #function-__samplerstop_after__ms
[function __sampler\.volume__\(vol\)]: #function-__samplervolume__vol
[function __sampler\.wait__\(\)]: #function-__samplerwait__