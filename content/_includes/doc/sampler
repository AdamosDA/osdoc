<div class="ClassDoc YAMLDoc" id="sampler" markdown="1">

# class __sampler__

The `sampler` module provides functionality to play sound samples.

__Example:__

{% highlight python %}
src = exp.pool['bark.ogg']
my_sampler = sampler(src, volume=.5)
my_sampler.play()
{% endhighlight %}

__Overview:__


- [Things to know](#things-to-know)
	- [Sampling rate](#sampling-rate)
	- [Supported file formats](#supported-file-formats)
	- [Backwards incompatible changes from 2.9 to 3.0](#backwards-incompatible-changes-from-29-to-30)
	- [Playback keywords](#playback-keywords)
- [function __sampler\.\_\_init\_\___\(experiment, src, \*\*playback\_args\)](#function-__sampler__init____experiment-src-playback_args)
- [property __sampler.block__](#property-__samplerblock__)
- [function __sampler\.close\_sound__\(experiment\)](#function-__samplerclose_sound__experiment)
- [property __sampler.duration__](#property-__samplerduration__)
- [property __sampler.fade_in__](#property-__samplerfade_in__)
- [function __sampler\.init\_sound__\(experiment\)](#function-__samplerinit_sound__experiment)
- [function __sampler\.is\_playing__\(\)](#function-__sampleris_playing__)
- [property __sampler.pan__](#property-__samplerpan__)
- [function __sampler\.pause__\(\)](#function-__samplerpause__)
- [property __sampler.pitch__](#property-__samplerpitch__)
- [function __sampler\.play__\(\*\*playback\_args\)](#function-__samplerplay__playback_args)
- [function __sampler\.resume__\(\)](#function-__samplerresume__)
- [function __sampler\.stop__\(\)](#function-__samplerstop__)
- [property __sampler.volume__](#property-__samplervolume__)
- [function __sampler\.wait__\(\)](#function-__samplerwait__)



## [Things to know](#things-to-know) {#things-to-know}

### [Sampling rate](#sampling-rate) {#sampling-rate}

If you find that your sample plays to slowly (low pitch) or too quickly
(high pitch), make sure that the sampling rate of your sample matches
the sampling rate of the sampler back-end as specified under back-end
settings.

### [Supported file formats](#supported-file-formats) {#supported-file-formats}

Sound files in `.wav` and `.ogg` format are supported. If you need to
convert samples from a different format, you can use
[Audacity](http://sourceforge.net/projects/audacity/).

### [Backwards incompatible changes from 2.9 to 3.0](#backwards-incompatible-changes-from-29-to-30) {#backwards-incompatible-changes-from-29-to-30}

The following are now properties, as described under
[playback keywords]:

- [sampler.volume]
- [sampler.fade_in]
- [sampler.pitch]
- [sampler.pan]

Therefore, the following will no longer work:

{% highlight python %}
sampler.volume(.5)
{% endhighlight %}

And has to be changed to:

{% highlight python %}
sampler.volume = .5
{% endhighlight %}

### [Playback keywords](#playback-keywords) {#playback-keywords}

Functions that accept `**playback_args` take the following keyword
arguments:

- `volume` specifies a volume between `0.0` (silent) and `1.0`
  (maximum).
- `pitch` specifies a pitch (or playback speed), where values > 1
  indicate a higher pitch, and values < 1 indicate a lower pitch.
- `pan` specifies a panning, where values < 0 indicate panning to the
  left, and values > 0 indicate panning to the right. Alternatively, you
  can set pan to 'left' or 'right' to play only a single channel.
- `duration` specifies the duration of the the sound in milliseconds, or
  is set to `0` or `None` to play the full sound.
- `fade_in` specifies the fade-in time (or attack) of the sound, or is
  set to `0` or `None` to disable fade-in.
- `block` indicates whether the experiment should block (`True`) during
  playback or not (`False`).

{% highlight python %}
src = exp.pool['bark.ogg']
my_sampler = sampler(src)
my_sampler.play(volume=.5, pan='left')
{% endhighlight %}

Playback keywords only affect the current operation (except when passed
to [sampler.\_\_init\_\_][__init__]). To change the behavior for all
subsequent operations, set the playback properties directly:

{% highlight python %}
src = exp.pool['bark.ogg']
my_sampler = sampler(src)
my_sampler.volume = .5
my_sampler.pan = 'left'
my_sampler.play()
my_sampler.play()
{% endhighlight %}

Or pass the playback keywords to [sampler.\_\_init\_\_][__init__]:

{% highlight python %}
src = exp.pool['bark.ogg']
my_sampler = sampler(src, volume=.5, pan='left')
my_sampler.play()
my_sampler.play()
{% endhighlight %}

<div class="FunctionDoc YAMLDoc" id="sampler-__init__" markdown="1">

## [function __sampler\.\_\_init\_\___\(experiment, src, \*\*playback\_args\)](#function-__sampler__init____experiment-src-playback_args) {#function-__sampler__init____experiment-src-playback_args}

Constructor to create a new `sampler` object. You do not generally
call this constructor directly, but use the `sampler()` function,
which is described here: [/python/sampler/]().

__Example:__

{% highlight python %}
src = exp.pool[u'my_sound.ogg']
my_sampler = sampler(src, volume=.5)
{% endhighlight %}

__Arguments:__

- `experiment` -- The experiment object.
	- Type: experiment
- `src` -- The full path to a `.wav` or `.ogg` file.
	- Type: unicode, str

__Keyword dict:__

- `**playback_args`: Optional [playback keywords] that will be used as the default for this `sampler` object.

</div>

[sampler.__init__]: #sampler-__init__
[__init__]: #sampler-__init__

<div class="PropertyDoc YAMLDoc" id="sampler-block" markdown="1">

## [property __sampler.block__](#property-__samplerblock__) {#property-__samplerblock__}

This is a read-and-write property. Changing the `block` property will affect subsequent operations.

</div>

[sampler.block]: #sampler-block
[block]: #sampler-block

<div class="FunctionDoc YAMLDoc" id="sampler-close_sound" markdown="1">

## [function __sampler\.close\_sound__\(experiment\)](#function-__samplerclose_sound__experiment) {#function-__samplerclose_sound__experiment}

Closes the mixer after the experiment is finished.

__Arguments:__

- `experiment` -- The experiment object.
	- Type: experiment

</div>

[sampler.close_sound]: #sampler-close_sound
[close_sound]: #sampler-close_sound

<div class="PropertyDoc YAMLDoc" id="sampler-duration" markdown="1">

## [property __sampler.duration__](#property-__samplerduration__) {#property-__samplerduration__}

This is a read-and-write property. Changing the `duration` property will affect subsequent operations.

</div>

[sampler.duration]: #sampler-duration
[duration]: #sampler-duration

<div class="PropertyDoc YAMLDoc" id="sampler-fade_in" markdown="1">

## [property __sampler.fade_in__](#property-__samplerfade_in__) {#property-__samplerfade_in__}

This is a read-and-write property. Changing the `fade_in` property will affect subsequent operations.

</div>

[sampler.fade_in]: #sampler-fade_in
[fade_in]: #sampler-fade_in

<div class="FunctionDoc YAMLDoc" id="sampler-init_sound" markdown="1">

## [function __sampler\.init\_sound__\(experiment\)](#function-__samplerinit_sound__experiment) {#function-__samplerinit_sound__experiment}

Initializes the pygame mixer before the experiment begins.

__Arguments:__

- `experiment` -- The experiment object.
	- Type: experiment

</div>

[sampler.init_sound]: #sampler-init_sound
[init_sound]: #sampler-init_sound

<div class="FunctionDoc YAMLDoc" id="sampler-is_playing" markdown="1">

## [function __sampler\.is\_playing__\(\)](#function-__sampleris_playing__) {#function-__sampleris_playing__}

Checks if a sound is currently playing.

__Returns:__

True if a sound is playing, False if not.

- Type: bool

</div>

[sampler.is_playing]: #sampler-is_playing
[is_playing]: #sampler-is_playing

<div class="PropertyDoc YAMLDoc" id="sampler-pan" markdown="1">

## [property __sampler.pan__](#property-__samplerpan__) {#property-__samplerpan__}

This is a read-and-write property. Changing the `pan` property will affect subsequent operations.

</div>

[sampler.pan]: #sampler-pan
[pan]: #sampler-pan

<div class="FunctionDoc YAMLDoc" id="sampler-pause" markdown="1">

## [function __sampler\.pause__\(\)](#function-__samplerpause__) {#function-__samplerpause__}

Pauses playback (if any).

__Example:__

{% highlight python %}
src = exp.pool[u'my_sound.ogg']
my_sampler = sampler(src)
my_sampler.play()
sleep(100)
my_sampler.pause()
sleep(100)
my_sampler.resume()
{% endhighlight %}

</div>

[sampler.pause]: #sampler-pause
[pause]: #sampler-pause

<div class="PropertyDoc YAMLDoc" id="sampler-pitch" markdown="1">

## [property __sampler.pitch__](#property-__samplerpitch__) {#property-__samplerpitch__}

This is a read-and-write property. Changing the `pitch` property will affect subsequent operations.

</div>

[sampler.pitch]: #sampler-pitch
[pitch]: #sampler-pitch

<div class="FunctionDoc YAMLDoc" id="sampler-play" markdown="1">

## [function __sampler\.play__\(\*\*playback\_args\)](#function-__samplerplay__playback_args) {#function-__samplerplay__playback_args}

Plays the sound.

__Example:__

{% highlight python %}
src = exp.pool[u'my_sound.ogg']
my_sampler = sampler(src)
my_sampler.play(pitch=.5, block=True)
{% endhighlight %}

__Keyword dict:__

- `**playback_args`: Optional [playback keywords] that will be used for this call to [sampler.play]. This does not affect subsequent operations.

</div>

[sampler.play]: #sampler-play
[play]: #sampler-play

<div class="FunctionDoc YAMLDoc" id="sampler-resume" markdown="1">

## [function __sampler\.resume__\(\)](#function-__samplerresume__) {#function-__samplerresume__}

Resumes playback (if any).

__Example:__

{% highlight python %}
src = exp.pool[u'my_sound.ogg']
my_sampler = sampler(src)
my_sampler.play()
sleep(100)
my_sampler.pause()
sleep(100)
my_sampler.resume()
{% endhighlight %}

</div>

[sampler.resume]: #sampler-resume
[resume]: #sampler-resume

<div class="FunctionDoc YAMLDoc" id="sampler-stop" markdown="1">

## [function __sampler\.stop__\(\)](#function-__samplerstop__) {#function-__samplerstop__}

Stops the currently playing sound (if any).

__Example:__

{% highlight python %}
src = exp.pool[u'my_sound.ogg']
my_sampler = sampler(src)
my_sampler.play()
sleep(100)
my_sampler.stop()
{% endhighlight %}

</div>

[sampler.stop]: #sampler-stop
[stop]: #sampler-stop

<div class="PropertyDoc YAMLDoc" id="sampler-volume" markdown="1">

## [property __sampler.volume__](#property-__samplervolume__) {#property-__samplervolume__}

This is a read-and-write property. Changing the `volume` property will affect subsequent operations.

</div>

[sampler.volume]: #sampler-volume
[volume]: #sampler-volume

<div class="FunctionDoc YAMLDoc" id="sampler-wait" markdown="1">

## [function __sampler\.wait__\(\)](#function-__samplerwait__) {#function-__samplerwait__}

Blocks until the sound has finished playing or returns right away if no sound is playing.

__Example:__

{% highlight python %}
src = exp.pool[u'my_sound.ogg']
my_sampler = sampler(src)
my_sampler.play()
my_sampler.wait()
print('The sampler is finished!')
{% endhighlight %}

</div>

[sampler.wait]: #sampler-wait
[wait]: #sampler-wait

</div>

[sampler]: #sampler


[Things to know]: #things-to-know
[Sampling rate]: #sampling-rate
[Supported file formats]: #supported-file-formats
[Backwards incompatible changes from 2.9 to 3.0]: #backwards-incompatible-changes-from-29-to-30
[Playback keywords]: #playback-keywords
[function __sampler\.\_\_init\_\___\(experiment, src, \*\*playback\_args\)]: #function-__sampler__init____experiment-src-playback_args
[property __sampler.block__]: #property-__samplerblock__
[function __sampler\.close\_sound__\(experiment\)]: #function-__samplerclose_sound__experiment
[property __sampler.duration__]: #property-__samplerduration__
[property __sampler.fade_in__]: #property-__samplerfade_in__
[function __sampler\.init\_sound__\(experiment\)]: #function-__samplerinit_sound__experiment
[function __sampler\.is\_playing__\(\)]: #function-__sampleris_playing__
[property __sampler.pan__]: #property-__samplerpan__
[function __sampler\.pause__\(\)]: #function-__samplerpause__
[property __sampler.pitch__]: #property-__samplerpitch__
[function __sampler\.play__\(\*\*playback\_args\)]: #function-__samplerplay__playback_args
[function __sampler\.resume__\(\)]: #function-__samplerresume__
[function __sampler\.stop__\(\)]: #function-__samplerstop__
[property __sampler.volume__]: #property-__samplervolume__
[function __sampler\.wait__\(\)]: #function-__samplerwait__