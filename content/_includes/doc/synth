<div class="ClassDoc YAMLDoc" id="synth" markdown="1">

# class __synth__

The `synth` class provides basic sound synthesis functionality.

__Example:__

{% highlight python %}
# Generate and play a simple tone
from openexp.synth import synth
my_synth = synth(exp, osc='saw', freq='b2', attack=250, length='500')
my_synth.play()
{% endhighlight %}

__Function list:__


- [function __synth.\_\_init\_\___(experiment, length=100, osc=u'sine', attack=0, freq=440, decay=5)](#function-__synth__init____experiment-length100-oscusine-attack0-freq440-decay5)
- [property __synth.is_playing__](#property-__synthis_playing__)
- [function __synth.key_to_freq__(key)](#function-__synthkey_to_freq__key)
- [property __synth.pan__](#property-__synthpan__)
- [property __synth.pause__](#property-__synthpause__)
- [property __synth.pitch__](#property-__synthpitch__)
- [property __synth.play__](#property-__synthplay__)
- [property __synth.resume__](#property-__synthresume__)
- [property __synth.stop_after__](#property-__synthstop_after__)
- [property __synth.volume__](#property-__synthvolume__)
- [property __synth.wait__](#property-__synthwait__)



<div class="FunctionDoc YAMLDoc" id="synth-__init__" markdown="1">

## [function __synth.\_\_init\_\___(experiment, length=100, osc=u'sine', attack=0, freq=440, decay=5)](#function-__synth__init____experiment-length100-oscusine-attack0-freq440-decay5) {#function-__synth__init____experiment-length100-oscusine-attack0-freq440-decay5}

Initializes the synthesizer.

__Example:__

{% highlight python %}
from openexp.synth import synth
my_synth = synth(exp, freq='b2', length=500)
{% endhighlight %}

__Arguments:__

- `experiment` -- The experiment object.
	- Type: experiment

__Keywords:__

- `freq` -- Frequency, either an integer value (value in hertz) or a string ("A1", "eb2", etc.).
	- Default: 440
	- Type: str, unicode, int, float
- `length` -- The length of the sound in milliseconds.
	- Default: 100
	- Type: int, float
- `attack` -- The attack (fade-in) time in milliseconds.
	- Default: 0
	- Type: int, float
- `osc` -- Oscillator, can be "sine", "saw", "square" or "white_noise".
	- Default: 'sine'
	- Type: str, unicode
- `decay` -- The decay (fade-out) time in milliseconds.
	- Default: 5
	- Type: int, float

</div>

[synth.__init__]: #synth-__init__
[__init__]: #synth-__init__

<div class="PropertyDoc YAMLDoc" id="synth-is_playing" markdown="1">

## [property __synth.is_playing__](#property-__synthis_playing__) {#property-__synthis_playing__}

See `sampler.is_playing`.

</div>

[synth.is_playing]: #synth-is_playing
[is_playing]: #synth-is_playing

<div class="FunctionDoc YAMLDoc" id="synth-key_to_freq" markdown="1">

## [function __synth.key_to_freq__(key)](#function-__synthkey_to_freq__key) {#function-__synthkey_to_freq__key}

Converts a key (e.g., A1) to a frequency.

__Example:__

{% highlight python %}
from openexp.synth import synth
my_synth = synth(exp)
print('An a2 is %d Hz' % my_synth.key_to_freq('a2'))
{% endhighlight %}

__Arguments:__

- `key` -- A string like "A1", "eb2", etc, or a numeric frequency (in which case the frequency is simply returned as a float).
	- Type: str, unicode, int, float

__Returns:__

A frequency in hertz.

- Type: float

</div>

[synth.key_to_freq]: #synth-key_to_freq
[key_to_freq]: #synth-key_to_freq

<div class="PropertyDoc YAMLDoc" id="synth-pan" markdown="1">

## [property __synth.pan__](#property-__synthpan__) {#property-__synthpan__}

See `sampler.pan`.

</div>

[synth.pan]: #synth-pan
[pan]: #synth-pan

<div class="PropertyDoc YAMLDoc" id="synth-pause" markdown="1">

## [property __synth.pause__](#property-__synthpause__) {#property-__synthpause__}

See `sampler.pause`.

</div>

[synth.pause]: #synth-pause
[pause]: #synth-pause

<div class="PropertyDoc YAMLDoc" id="synth-pitch" markdown="1">

## [property __synth.pitch__](#property-__synthpitch__) {#property-__synthpitch__}

See `sampler.pitch`.

</div>

[synth.pitch]: #synth-pitch
[pitch]: #synth-pitch

<div class="PropertyDoc YAMLDoc" id="synth-play" markdown="1">

## [property __synth.play__](#property-__synthplay__) {#property-__synthplay__}

See `sampler.play`.

</div>

[synth.play]: #synth-play
[play]: #synth-play

<div class="PropertyDoc YAMLDoc" id="synth-resume" markdown="1">

## [property __synth.resume__](#property-__synthresume__) {#property-__synthresume__}

See `sampler.resume`.

</div>

[synth.resume]: #synth-resume
[resume]: #synth-resume

<div class="PropertyDoc YAMLDoc" id="synth-stop_after" markdown="1">

## [property __synth.stop_after__](#property-__synthstop_after__) {#property-__synthstop_after__}

See `sampler.stop_after`.

</div>

[synth.stop_after]: #synth-stop_after
[stop_after]: #synth-stop_after

<div class="PropertyDoc YAMLDoc" id="synth-volume" markdown="1">

## [property __synth.volume__](#property-__synthvolume__) {#property-__synthvolume__}

See `sampler.volume`.

</div>

[synth.volume]: #synth-volume
[volume]: #synth-volume

<div class="PropertyDoc YAMLDoc" id="synth-wait" markdown="1">

## [property __synth.wait__](#property-__synthwait__) {#property-__synthwait__}

See `sampler.wait`.

</div>

[synth.wait]: #synth-wait
[wait]: #synth-wait

</div>

[synth]: #synth


[function __synth.\_\_init\_\___(experiment, length=100, osc=u'sine', attack=0, freq=440, decay=5)]: #function-__synth__init____experiment-length100-oscusine-attack0-freq440-decay5
[property __synth.is_playing__]: #property-__synthis_playing__
[function __synth.key_to_freq__(key)]: #function-__synthkey_to_freq__key
[property __synth.pan__]: #property-__synthpan__
[property __synth.pause__]: #property-__synthpause__
[property __synth.pitch__]: #property-__synthpitch__
[property __synth.play__]: #property-__synthplay__
[property __synth.resume__]: #property-__synthresume__
[property __synth.stop_after__]: #property-__synthstop_after__
[property __synth.volume__]: #property-__synthvolume__
[property __synth.wait__]: #property-__synthwait__