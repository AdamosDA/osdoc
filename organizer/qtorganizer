#!/usr/bin/python
# -*- coding: utf-8 -*-

"""
This file is part of osdoc.

osdoc is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

osdoc is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with osdoc.  If not, see <http://www.gnu.org/licenses/>.
"""

import sys
from PyQt4 import QtGui, QtCore
from liborganizer import *

class QtOrganizer(QtGui.QListWidget):
	
	"""Implements the basic GUI for organizing osdoc."""
    
	def __init__(self):
		
		"""Constructor."""
		
		super(QtOrganizer, self).__init__()
		self.setWindowTitle(u'osdoc organizer')
		self.refresh()
		self.show()
		
	def refresh(self):
		
		"""Refreshes the overview."""
		
		self.content = listContent()
		self.clear()
		for path, i in self.content:
			self.addItem(formatItem(path, i))
			
	def move(self, d=1):
		
		"""
		Moves an entry up or down.
		
		Keyword arguments:
		d	--	The distance to move the entry. Positive values indicate moving
				down. (default=1)
		"""
		
		path, i = self.content[self.currentRow()]
		
		key = i[u'sortkey']
		big, small = key.split(u'.')
						
		if i[u'level'] == 0:
			_small = u'X'
			small = u'X'
			_big = str(int(big) + d).rjust(3, '0')
		else:
			_small = str(int(small) + d).rjust(3, '0')
			_big = big
						
		fromKey = u'%s.%s' % (big, small)
		toKey = u'%s.%s' % (_big, _small)
		
		print 'QtOrganizer.move(): from %s to %s' % (fromKey, toKey)
		
		move(fromKey, toKey)
		self.refresh()
			
	def keyPressEvent(self, e):
		
		"""
		Handles a keyPressEvent and moves an entry up or down when applicable.
		
		Arguments:
		e	--	A QkeyEvent.
		"""
		
		super(QtOrganizer, self).keyPressEvent(e)
		if e.text() == u'+':
			self.move(d=1)
		elif e.text() == u'-':
			self.move(d=-1)
		elif e.text() == u'r':
			self.refresh()

def main():
	
	"""The main function."""

	app = QtGui.QApplication(sys.argv)
	ex = QtOrganizer()
	sys.exit(app.exec_())

if __name__ == u'__main__':
    
    main()